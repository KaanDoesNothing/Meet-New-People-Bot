extends layout.pug

block content
    div(class="text-center" id="profileApp")
        div(class="card bg-light" id="profileCard" v-if="user.username")
            img(class="mx-auto d-block" src=user.displayAvatarURL({size: 4096}) width="250px" id="profileImage")
            label(class="h1") {{user.tag}}
            label(class="h5") Balance: {{user.settings.economy.balance}}

            div(class="card" id="descriptionCard")
                label(class="card-header") Information about me
                
                div(class="card-body")
                    label(class="card-text" v-if="!editing" v-html="markdown")

                    textarea(class="form-control text-center" v-if="editing" v-model="user.settings.profile.description")

            div(class="button-group" v-if="hasPermissions")
                button(class="btn btn-dark" v-if="!editing" @click="edit()") Edit
                button(class="btn btn-danger" v-if="editing" @click="cancel()") Cancel
                button(class="btn btn-success" v-if="editing" @click="save()") Save

block extraScripts
    script.
        new Vue({
            el: "#profileApp",
            data() {
                return {
                    user: {},
                    editing: false,
                    hasPermissions: #{hasPermissions === 1 ? "true" : "false"}
                }
            },
            created() {
                this.fetchUser();
            },
            methods: {
                fetchUser() {
                    Axios.get("/profile/#{user.id}/json").then(res => {
                        this.user = res.data.user;
                    });
                },
                edit() {
                    this.editing = true;
                },
                cancel() {
                    this.editing = false;
                    this.fetchUser();
                },
                save() {
                    Axios.post("/profile/update", {
                        id: this.user.id,
                        data: this.user.settings.profile
                    }).then(res => {
                        if(res.data.settings) {
                            this.fetchUser();
                            this.editing = false;
                        }
                    });
                }
            },
            computed: {
                markdown() {
                    return domPurify.sanitize(marked(this.user.settings.profile.description));
                }
            }
        });

block extraStyles
    style.
        #profileCard {
            margin: 15% 30%;
            min-height: 400px;
        }

        #profileImage {
            margin-top: -180px;
        }

        #descriptionCard {
            height: 100%;
            margin: 1%;
        }

        .button-group button {
            margin: 1%;
        }

        @media(max-width: 800px) {
            #profileImage {
                margin: 1%;
                border-radius: 50%;
            }

            #profileCard {
                margin: 5%;
                height: 100%;
            }
        }

    if user.settings.profile.background.length > 0
        style.
            #profileCard {
                background-image: url('#{user.settings.profile.background}');
                background-size: 100% 100%;
            }
            #descriptionCard {
                opacity: 0.9;
            }